### Splunk queries  https://www.splunk.com/pdfs/solution-guides/splunk-quick-reference-guide.pdf or https://docs.splunk.com/Documentation/Splunk/8.1.0/SearchReference/Stats


To break query across lines:
Ctrl + \
Command + \


# List indexes
| eventcount summarize=false index=* index=_* | dedup index | fields index
| tstats count WHERE index=* by index | table index
| tstats count where index=zscaler sourcetype=zscalernss-web by _time span=1d
| tstats count where index=zscaler sourcetype=zscalernss-web by _time span=7d
| tstats count WHERE index=* by sourcetype,_time span=1d prestats=t |  timechart span=1d count by sourcetype   (visualization: line chart)
| tstats sum("License_Usage.gb") AS "totalGB" from datamodel=Meta_Woot_License_Usage where (nodename = License_Usage)(License_Usage.indexer=**) (License_Usage.idx=*) (License_Usage.st=*) groupby License_Usage.idx, _time span=1d | convert timeformat="%Y-%m-%d" ctime(_time)

| tstats count WHERE index=rapid7 by sourcetype,_time span=1d prestats=t |  timechart span=1d count by sourcetype


# Index health
| tstats count where index=zscaler sourcetype=zscalernss-web by _time span=1d
| tstats count where index="*aws*" sourcetype="*cloudtrail*" by _time span=1h  (visualization: line)


index=* "*first.last@company.com*" | stats count by sourcetype

index="<index>" | spath <field to be searched> | search <field to be searched>="*<value>*" | table <field(s) to be displayed>


index="rapid7" ip="10.11.12.13" | table ip, host, severity, signature, signature_id, first_discovered, most_recently_discovered
index="qualys" ip="10.11.12.13" | table ip, hostname, severity, title, qid, first_found, last_found

# Show count of users who accessed github.com each day, and list users by name
index="zscaler" sourcetype="zscalernss-web" dest="*.github.com*" | dedup user | sort user | timechart span=1d count(user) as total_users
index="zscaler" sourcetype="zscalernss-web" dest="*.github.com*" | dedup user | sort user | table user


index="rapid7" | stats values(ip) as src_ip dc(ip) as distinctCountIP
index="rapid7" ip=* | table ip, hostname, os | sort hostname
index="rapid7" infoblox_city=* | table infoblox_city | dedup infoblox_city


index="rapid7" ip=* os="*Windows 10*" | table ip, hostname, os, severe_vulnerabilities, vulnerabilities | dedup ip

index="rapid7" ip=* os="*Windows 10*" | stats avg(severe_vulnerabilities)


index=rapid7 sourcetype="rapid7:nexpose:asset" |stats count by nexpose_tags | rex field=nexpose_tags "((?<junk>\w+);.*;(?<OS>.*))"| table nexpose_tags OS | stats count by OS| search OS="*-*"


# AWS ports allowed inbound to an instance / IP address
index="*aws*" sourcetype="*vpcflow*" action="allowed" dest_ip="10.10.10.10" dest_port<9999
| stats count by dest_ip, dest_port, protocol
| sort dest_port




index=main host=web_application status=200 action=purchase file="success.do" | top productId limit=5
productId	| count	| percent
WC-SH-G04	| 1360	| 8.426792

index=main host=web_application status=200 action=purchase file="success.do" | top productId limit=5 showperc=false
productId	| count
WC-SH-G04	| 1360

index=main host=web_application status=200 action=purchase file="success.do" | top product_name by Vendor limit=5 showperc=false countfield="Number of Sales" useother=True


index=main host=web_application status=200 file=* | rare file
file	| count	| percent
api	  | 1	    | 0.000858

index=main host=web_application status=200 file=* | rare file date_month
file	| date_month	| count	| percent
api	  | march	      | 1	    | 0.000858

index=main sourcetype=access_combined_wcookie file=success.do OR file=cart.do status=200
index=main host=web_application status=200 file IN ("cart.do", "success.do") | stats count as Transactions by file | rename file as Function
Function	| Transactions
cart.do	  | 29328

index=main host=web_application status=200 file IN ("cart.do", "success.do") | stats dc(JSESSIONID) as Logins by clientip | sort -Logins
clientip	      | Logins
87.194.216.51	  | 330

index=main host=web_application status=200 file=* | stats sum(bytes) as TotalBytes by file | sort file
file	  | TotalBytes
account	| 4238

index=main sourcetype=db_audit | stats avg(Duration) as "time to complete" by Command

index=main host=database | stats avg(Duration) as "time to complete" by Command | sort -"time to complete"
Command	| time to complete
SELECT * FROM users INNER JOIN creditcards ON users.userid=creditcards.userid INNER JOIN contactinfo ON users.userid=contactinfo.userid INNER JOIN usertracking ON users.userid=usertracking.userid WHERE users.userid = 2208	| 9988

index=main host=web_application status=200 | stats list(useragent)         <-- duplicates
index=main host=web_application status=200 | stats values(useragent)       <-- unique values

index=main host=web_application status=200 | stats values(useragent) as "Agents used"
Agents used
Googlebot/2.1 ( http://www.googlebot.com/bot.html)

index=main host=web_application status=200 | stats count(useragent) as "Times used" by useragent | rename useragent as "Agents used"
Agents used	| Times used
Googlebot/2.1 ( http://www.googlebot.com/bot.html)	| 1131

index=main host=web_application status=200 | stats distinct_count(useragent) as "Number of user agents"
index=main host=web_application status=200 | stats dc(JSESSIONID) as "Number of sessions" by useragent


index=sales sourcetype=vendor_sales | stats count as "Units Sold" sum(price) as "Gross Sales" by product_name.    <-- count and sum() must be in same pipe for this to work as desired


index=sales sourcetype=vendor_sales | stats avg(sale_price), min(sale_price), max(sale_price) by categoryId

index=bcgassets sourcetype=asset_list | stats list(Asset) by Employee


index=main sourcetype=db_audit | stats avg(Duration) as "time to complete" by Command
